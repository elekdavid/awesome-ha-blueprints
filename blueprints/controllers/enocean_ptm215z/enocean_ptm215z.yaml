# Blueprint metadata
blueprint:
  name: Controller - EnOcean PTM 215Z Green Power 2-Channel Switch
  description: |
    # Controller - EnOcean PTM 215Z Green Power 2-Channel Switch
    
    > TODO fill description
  source_url: https://github.com/EPMatt/awesome-ha-blueprints/blob/main/blueprints/controllers/enocean_ptm215z/enocean_ptm215z.yaml
  domain: automation
  input:
    controller_entity:
      name: (Zigbee2MQTT) Controller Entity
      description: The action sensor of the controller to use for the automation. Choose a value only if the remote is integrated with Zigbee2MQTT.
      default: ''
      selector:
        entity:
          domain: sensor
    hold_delay:
      name: Hold delay
      description: If the button has been held more than the configured Hold delay, the corresponding held action is triggered.
      default: 500
      selector:
        number:
          min: 100.0
          max: 1000.0
          unit_of_measurement: milliseconds
          mode: box
          step: 10.0
    button_1_pressed:
      name: Button 1 Pressed
      description: Action to run, when button 1 is pressed.
      default: []
      selector:
        action: {}
    button_1_held:
      name: Button 1 Held
      description: Action to run, when the button 1 is held.
      default: []
      selector:
        action: {}
    button_1_released:
      name: Button 1 Released
      description: Action to run, when the button 1 is released.
      default: []
      selector:
        action: {}
    button_2_pressed:
      name: Button 2 Pressed
      description: Action to run, when the button 2 pressed.
      default: []
      selector:
        action: {}
    button_2_held:
      name: Button 2 Held
      description: Action to run, when the button 2 is held.
      default: []
      selector:
        action: {}
    button_2_released:
      name: Button 2 Released
      description: Action to run, when the button 2 is released.
      default: []
      selector:
        action: {}
    button_3_pressed:
      name: Button 3 Pressed
      description: Action to run, when the button 3 is pressed.
      default: []
      selector:
        action: {}
    button_3_held:
      name: Button 3 Held
      description: Action to run, when the button 3 is held.
      default: []
      selector:
        action: {}
    button_3_released:
      name: Button 3 Released
      description: Action to run, when the button 3 is released.
      default: []
      selector:
        action: {}
    button_4_pressed:
      name: Button 4 Pressed
      description: Action to run, when the button 4 is pressed.
      default: []
      selector:
        action: {}
    button_4_held:
      name: Button 4 Held
      description: Action to run, when the button 4 is held.
      default: []
      selector:
        action: {}
    button_4_released:
      name: Button 4 Released
      description: Action to run, when the button 4 is released.
      default: []
      selector:
        action: {}
mode: single
max_exceeded: silent
trigger:
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input 'controller_entity'
condition: '{{ trigger.event.data.new_state.state not in ["","None"] }}'
action:
  - variables:
      trigger_action: '{{ trigger.event.data.new_state.state }}'
  - choose:
      - conditions: '{{ "press_" | string in trigger_action }}'
        sequence:
          - wait_for_trigger:
              - platform: state
                entity_id: !input 'controller_entity'
                to: "release_1"
              - platform: state
                entity_id: !input 'controller_entity'
                to: "release_2"
              - platform: state
                entity_id: !input 'controller_entity'
                to: "release_3"
              - platform: state
                entity_id: !input 'controller_entity'
                to: "release_4"
            timeout:
              milliseconds: !input 'hold_delay'
          - choose:
              - conditions: '{{ trigger_action == "press_1" and wait.trigger != None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: !input 'controller_entity'
                      action: bottom_button_up_short
                  - choose:
                      - conditions: []
                        sequence: !input 'button_1_pressed'
              - conditions: '{{ trigger_action == "press_2" and wait.trigger != None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: !input 'controller_entity'
                      action: top_button_up_short
                  - choose:
                      - conditions: []
                        sequence: !input 'button_2_pressed'
              - conditions: '{{ trigger_action == "press_3" and wait.trigger != None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: !input 'controller_entity'
                      action: bottom_button_down_short
                  - choose:
                      - conditions: []
                        sequence: !input 'button_3_pressed'
              - conditions: '{{ trigger_action == "press_4" and wait.trigger != None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: !input 'controller_entity'
                      action: top_button_down_short
                  - choose:
                      - conditions: []
                        sequence: !input 'button_4_pressed'
              - conditions: '{{ trigger_action == "press_1" and wait.trigger == None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: bottom_button_up_long
                  - choose:
                      - conditions: []
                        sequence: !input 'button_1_held'
              - conditions: '{{ trigger_action == "press_2" and wait.trigger == None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: top_button_up_long
                  - choose:
                      - conditions: []
                        sequence: !input 'button_2_held'
              - conditions: '{{ trigger_action == "press_3" and wait.trigger == None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: bottom_button_down_long
                  - choose:
                      - conditions: []
                        sequence: !input 'button_3_held'
              - conditions: '{{ trigger_action == "press_4" and wait.trigger == None }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: top_button_down_long
                  - choose:
                      - conditions: []
                        sequence: !input 'button_4_held'
      - conditions: '{{ "release_" | string in trigger_action }}'
        sequence:
          - choose:
              - conditions: '{{ trigger_action == "release_1" }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: bottom_button_up_release
                  - choose:
                      - conditions: []
                        sequence: !input 'button_1_released'
              - conditions: '{{ trigger_action == "release_2" }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: top_button_up_release
                  - choose:
                      - conditions: []
                        sequence: !input 'button_2_released'
              - conditions: '{{ trigger_action == "release_3" }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: bottom_button_down_release
                  - choose:
                      - conditions: []
                        sequence: !input 'button_2_released'
              - conditions: '{{ trigger_action == "release_4" }}'
                sequence:
                  - event: ahb_controller_event
                    event_data:
                      controller: '{{ controller_id }}'
                      action: top_button_down_release
                  - choose:
                      - conditions: []
                        sequence: !input 'button_4_released'